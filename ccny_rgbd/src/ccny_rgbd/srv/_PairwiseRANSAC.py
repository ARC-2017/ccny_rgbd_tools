"""autogenerated by genpy from ccny_rgbd/PairwiseRANSACRequest.msg. Do not edit."""
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class PairwiseRANSACRequest(genpy.Message):
  _md5sum = "4aaddd3c78c07049f4aab4d617ae2d82"
  _type = "ccny_rgbd/PairwiseRANSACRequest"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """int32 a
int32 b
float32 max_eucl_dist
float32 max_desc_dist
float32 min_inlier_ratio

"""
  __slots__ = ['a','b','max_eucl_dist','max_desc_dist','min_inlier_ratio']
  _slot_types = ['int32','int32','float32','float32','float32']

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       a,b,max_eucl_dist,max_desc_dist,min_inlier_ratio

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(PairwiseRANSACRequest, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.a is None:
        self.a = 0
      if self.b is None:
        self.b = 0
      if self.max_eucl_dist is None:
        self.max_eucl_dist = 0.
      if self.max_desc_dist is None:
        self.max_desc_dist = 0.
      if self.min_inlier_ratio is None:
        self.min_inlier_ratio = 0.
    else:
      self.a = 0
      self.b = 0
      self.max_eucl_dist = 0.
      self.max_desc_dist = 0.
      self.min_inlier_ratio = 0.

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      _x = self
      buff.write(_struct_2i3f.pack(_x.a, _x.b, _x.max_eucl_dist, _x.max_desc_dist, _x.min_inlier_ratio))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    try:
      end = 0
      _x = self
      start = end
      end += 20
      (_x.a, _x.b, _x.max_eucl_dist, _x.max_desc_dist, _x.min_inlier_ratio,) = _struct_2i3f.unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      _x = self
      buff.write(_struct_2i3f.pack(_x.a, _x.b, _x.max_eucl_dist, _x.max_desc_dist, _x.min_inlier_ratio))
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    try:
      end = 0
      _x = self
      start = end
      end += 20
      (_x.a, _x.b, _x.max_eucl_dist, _x.max_desc_dist, _x.min_inlier_ratio,) = _struct_2i3f.unpack(str[start:end])
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill

_struct_I = genpy.struct_I
_struct_2i3f = struct.Struct("<2i3f")
"""autogenerated by genpy from ccny_rgbd/PairwiseRANSACResponse.msg. Do not edit."""
import sys
python3 = True if sys.hexversion > 0x03000000 else False
import genpy
import struct


class PairwiseRANSACResponse(genpy.Message):
  _md5sum = "d41d8cd98f00b204e9800998ecf8427e"
  _type = "ccny_rgbd/PairwiseRANSACResponse"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """

"""
  __slots__ = []
  _slot_types = []

  def __init__(self, *args, **kwds):
    """
    Constructor. Any message fields that are implicitly/explicitly
    set to None will be assigned a default value. The recommend
    use is keyword arguments as this is more robust to future message
    changes.  You cannot mix in-order arguments and keyword arguments.

    The available fields are:
       

    :param args: complete set of field values, in .msg order
    :param kwds: use keyword arguments corresponding to message field names
    to set specific fields.
    """
    if args or kwds:
      super(PairwiseRANSACResponse, self).__init__(*args, **kwds)

  def _get_types(self):
    """
    internal API method
    """
    return self._slot_types

  def serialize(self, buff):
    """
    serialize message into buffer
    :param buff: buffer, ``StringIO``
    """
    try:
      pass
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize(self, str):
    """
    unpack serialized message in str into this message instance
    :param str: byte array of serialized message, ``str``
    """
    try:
      end = 0
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill


  def serialize_numpy(self, buff, numpy):
    """
    serialize message with numpy array types into buffer
    :param buff: buffer, ``StringIO``
    :param numpy: numpy python module
    """
    try:
      pass
    except struct.error as se: self._check_types(se)
    except TypeError as te: self._check_types(te)

  def deserialize_numpy(self, str, numpy):
    """
    unpack serialized message in str into this message instance using numpy for array types
    :param str: byte array of serialized message, ``str``
    :param numpy: numpy python module
    """
    try:
      end = 0
      return self
    except struct.error as e:
      raise genpy.DeserializationError(e) #most likely buffer underfill

_struct_I = genpy.struct_I
class PairwiseRANSAC(object):
  _type          = 'ccny_rgbd/PairwiseRANSAC'
  _md5sum = '4aaddd3c78c07049f4aab4d617ae2d82'
  _request_class  = PairwiseRANSACRequest
  _response_class = PairwiseRANSACResponse
